image:
  # registry: docker.io
  registry: ghcr.io
  repository: authelia/authelia
  tag: ""
  pullPolicy: Always
  pullSecrets: []
  # pullSecrets:
  #   - myPullSecretName
domain: deiberts.domain
ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
    kubernetes.io/tls-acme: "true"
    #nginx.ingress.kubernetes.io/auth-url: http://authelia.authelia.svc.cluster.local/api/verify
    nginx.ingress.kubernetes.io/auth-signin: https://auth.deiberts.domain
    nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
  rewriteTarget: true
  subdomain: auth
  ## The Ingress Class Name.
  className: nginx
  tls:
    enabled: true
    secret: authelia-tls

rbac:
  ## Enable RBAC. Turning this on associates Authelia with a service account.
  ## If the vault injector is enabled, then RBAC must be enabled.
  enabled: true
  annotations: {}
  labels:
    app: authelia
  serviceAccountName: authelia
pod:
  # Must be Deployment, DaemonSet, or StatefulSet.
  kind: StatefulSet
  labels:
    app: authelia
  replicas: 1
  revisionHistoryLimit: 5
  ### Should be disabled per documentation
  enableServiceLinks: false
  ###
  priorityClassName: ""
  strategy:
    type: RollingUpdate
  securityContext:
    container:
      runAsUser: 2000
      runAsGroup: 2000
      fsGroup: 2000
    pod:
      privileged: true
  env:
  - name: TZ
    value: America/New_York
  resources:
    limits:
      cpu: "4.00"
      memory: 125Mi
    requests:
      cpu: "0.25"
      memory: 50Mi
  probes:
    method:
      httpGet:
        path: /api/health
        port: http
        scheme: HTTP
    liveness:
      initialDelaySeconds: 0
      periodSeconds: 30
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
    readiness:
      initialDelaySeconds: 0
      periodSeconds: 5
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 5
configMap:
  ntp:
    address: "pool.ntp.org"
  theme: dark
  default_redirection_url: ""
  access_control:
    ## Configure the ACL as a Secret instead of part of the ConfigMap.
    secret:
      ## Enables the ACL section being generated as a secret.
      enabled: false
      ## The key in the secret which contains the file to mount.
      key: configuration.acl.yaml
      ## An existingSecret name, if configured this will force the secret to be mounted using the key above.
      existingSecret: ""
    ## Default policy can either be 'bypass', 'one_factor', 'two_factor' or 'deny'. It is the policy applied to any
    ## resource if there is no policy to be applied to the user.
    default_policy: deny
    networks: []
    # networks:
    # - name: private
    #   networks:
    #   - 10.0.0.0/8
    #   - 172.16.0.0/12
    #   - 192.168.0.0/16
    # - name: vpn
    #   networks:
    #   - 10.9.0.0/16
    rules:
    - domain: rancher.deiberts.domain
      policy: one_factor
    # - domain: "mx2.mail.example.com"
    #   subject: "group:admins"
    #   policy: deny
    # - domain: "*.example.com"
    #   subject:
    #   - "group:admins"
    #   - "group:moderators"
    #   policy: two_factor
    # - domain: dev.example.com
    #   resources:
    #   - "^/groups/dev/.*$"
    #   subject: "group:dev"
    #   policy: two_factor
    # - domain: dev.example.com
    #   resources:
    #   - "^/users/john/.*$"
    #   subject:
    #   - ["group:dev", "user:john"]
    #   - "group:admins"
    #   policy: two_factor
    # - domain: "{user}.example.com"
    #   policy: bypass
  session:
    ## The name of the session cookie. (default: authelia_session).
    name: authelia_session
    ## Sets the Cookie SameSite value. Possible options are none, lax, or strict.
    ## Please read https://www.authelia.com/configuration/session/introduction/#same_site
    same_site: lax
    ## The time in seconds before the cookie expires and session is reset.
    expiration: 1h
    ## The inactivity time in seconds before the session is reset.
    inactivity: 5m
    ## The remember me duration.
    ## Value is in seconds, or duration notation. Value of 0 disables remember me.
    ## See: https://www.authelia.com/configuration/prologue/common/#duration-notation-format
    ## Longer periods are considered less secure because a stolen cookie will last longer giving attackers more time to
    ## spy or attack. Currently the default is 1M or 1 month.
    remember_me_duration: 1M
    ##
    ## Redis Provider
    ##
    ## Important: Kubernetes (or HA) users must read https://www.authelia.com/overview/authorization/statelessness/
    ##
    ## The redis connection details
    redis:
      enabled: false
      enabledSecret: false
      host: redis.databases.svc.cluster.local
      port: 6379
  storage:
    ##
    ## Local (Storage Provider)
    ##
    ## This stores the data in a SQLite3 Database.
    ## This is only recommended for lightweight non-stateful installations.
    ##
    ## Important: Kubernetes (or HA) users must read https://www.authelia.com/overview/authorization/statelessness/
    ##
    local:
      enabled: true
      path: /config/db.sqlite3
    postgres:
      enabled: false
  regulation:
    max_retries: 3
    find_time: 2m
    ban_time: 5m
  authentication_backend:
    ldap:
      ## Enable LDAP Backend.
      enabled: false
    file:
      enabled: true
      path: /config/users_database.yml
      watch: true
      search:
        email: false
        case_insensitive: false
      password:
        algorithm: argon2
        argon2:
          variant: argon2id
          iterations: 3
          memory: 65536
          parallelism: 4
          key_length: 32
          salt_length: 16
        scrypt:
          iterations: 16
          block_size: 8
          parallelism: 1
          key_length: 32
          salt_length: 16
        pbkdf2:
          variant: sha512
          iterations: 310000
          salt_length: 16
        sha2crypt:
          variant: sha512
          iterations: 50000
          salt_length: 16
        bcrypt:
          variant: standard
          cost: 12
  notifier:
    ## You can disable the notifier startup check by setting this to true.
    disable_startup_check: false

    ##
    ## File System (Notification Provider)
    ##
    ## Important: Kubernetes (or HA) users must read https://www.authelia.com/overview/authorization/statelessness/
    ##
    filesystem:
      enabled: true
      filename: /config/notification.txt

    ##
    ## SMTP (Notification Provider)
    ##
    ## Use a SMTP server for sending notifications. Authelia uses the PLAIN or LOGIN methods to authenticate.
    ## [Security] By default Authelia will:
    ##   - force all SMTP connections over TLS including unauthenticated connections
    ##      - use the disable_require_tls boolean value to disable this requirement
    ##        (only works for unauthenticated connections)
    ##   - validate the SMTP server x509 certificate during the TLS handshake against the hosts trusted certificates
    ##     (configure in tls section)
    smtp:
      enabled: false
      enabledSecret: false
      host: smtp.mail.svc.cluster.local
      port: 25
      timeout: 5s
      username: test
      sender: admin@example.com
      ## HELO/EHLO Identifier. Some SMTP Servers may reject the default of localhost.
      identifier: localhost
      ## Subject configuration of the emails sent.
      ## {title} is replaced by the text from the notifier
      subject: "[Authelia] {title}"
      ## This address is used during the startup check to verify the email configuration is correct.
      ## It's not important what it is except if your email server only allows local delivery.
      startup_check_address: test@authelia.com
persistence:
  enabled: true
  labels:
    app: authelia
  readOnly: false
  subPath: ""
  storageClass: "local-path"
  volumeName: ""
  accessModes:
    - ReadWriteOnce
  size: 100Mi
  selector: {}